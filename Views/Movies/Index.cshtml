@model IEnumerable<Movie>
@{
    ViewData["Title"] = "Movies";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-5 text-white ">
            <i class="bi bi-film me-2"></i>Our Movie Collection
        </h1>
        <div>
            @if (User.Identity.IsAuthenticated && User.IsInRole ("Admin"))
            {
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Add New Movie
                </a>    
            }

        </div>
    </div>

    <div class="row g-4">
        @foreach (var movie in Model)
        {
            <div class="col-xl-3 col-lg-4 col-md-6">
                <div class="movie-card card h-100 border-0 shadow-sm overflow-hidden">
                    <div class="position-relative">
                        <img class="card-img-top" src="@movie.PosterUrl" alt="@movie.Title poster"
                        onerror="this.onerror=null;this.src='/images/movie-placeholder.jpg';">
                        <div class="movie-badge">
                            <span class="badge bg-dark text-white">@movie.Category</span>
                            @if (movie.ImdbRating.HasValue)
                            {
                                <span class="badge bg-warning text-dark">
                                    <i class="bi bi-star-fill"></i> @movie.ImdbRating.Value.ToString("0.0")
                                </span>
                            }
                        </div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-truncate">@movie.Title</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <small class="text-muted">
                                <i class="bi bi-clock"></i> @movie.DurationMinutes mins
                            </small>
                            <small class="text-muted">
                                <i class="bi bi-ticket-perforated"></i> $ @movie.price.ToString("0.00")
                            </small>
                        </div>
                        <p class="card-text text-muted movie-description">@movie.Description</p>

                        <!-- Add to Cart Button -->
                        <div class="mt-auto mb-3">
                            <a class="btn btn-success w-100 add-to-cart" asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@movie.Id">
                                <i class="bi bi-cart-plus"></i> Add to Cart
                            </a>

                        </div>

                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="bi bi-calendar"></i> @movie.ReleaseDate.ToString("MMM dd, yyyy")
                            </small>
                            <div class="btn-group">
                                <a asp-action="Details" asp-route-id="@movie.Id" class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-info-circle"></i>
                                </a>
                                @if (User.Identity.IsAuthenticated && User.IsInRole ("Admin"))
                                {

                                    <a asp-action="Edit" asp-route-id="@movie.Id" class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@movie.Id" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        .text-gradient {
            background: linear-gradient(45deg, #6a11cb, #2575fc);
            color: transparent;
        }

        .movie-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            background-color: #1e1e1e;
            border: 1px solid #2d2d2d !important;
        }

            .movie-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3) !important;
            }

        .movie-badge {
            position: absolute;
            top: 10px;
            left: 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .card-img-top {
            height: 400px;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .movie-card:hover .card-img-top {
            transform: scale(1.05);
        }

        .movie-description {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            min-height: 72px;
        }

        .btn-group .btn {
            border-radius: 0;
        }

            .btn-group .btn:first-child {
                border-top-left-radius: 5px;
                border-bottom-left-radius: 5px;
            }

            .btn-group .btn:last-child {
                border-top-right-radius: 5px;
                border-bottom-right-radius: 5px;
            }

        .add-to-cart { 
           transition: all 0.3s ease; 
        }

            .add-to-cart:hover {
                background-color: #198754;
                transform: translateY(-2px);
            }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add to Cart functionality
            const addToCartButtons = document.querySelectorAll('.add-to-cart');

            addToCartButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const movieId = this.getAttribute('data-movie-id');

                    // Here you would typically make an AJAX call to your backend
                    // For demonstration, we'll just show a notification

                    // Change button appearance temporarily
                    const originalText = this.innerHTML;
                    this.innerHTML = '<i class="bi bi-check-circle"></i> Added!';
                    this.classList.remove('btn-success');
                    this.classList.add('btn-primary');

                    // Reset button after 2 seconds
                    setTimeout(() => {
                        this.innerHTML = originalText;
                        this.classList.remove('btn-primary');
                        this.classList.add('btn-success');
                    }, 2000);

                    // In a real application, you would:
                    // 1. Make an AJAX call to your CartController
                    // 2. Update the cart count in the navbar
                    // 3. Possibly show a toast notification

                    console.log(`Added movie ${movieId} to cart`);
                });
            });
        });
    </script>
}